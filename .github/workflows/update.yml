name: update

on:
  schedule:
    - cron: '* */1 * * *'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

defaults:
  run:
    # GitHub Actions run without a TTY device. This is a workaround to get one,
    # based on https://github.com/actions/runner/issues/241#issuecomment-2019042651
    shell: 'script --return --quiet --log-out /dev/null --command "bash -e {0}"'

jobs:
  update:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch database
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          file: '.*\\.zst'
          regex: true

      - name: Dry run
        id: update
        run: bash src/test/update.sh -m 0 ; echo "updated=$?" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_OWNER: ${{ github.repository_owner }}
          GITHUB_REPO: ${{ github.event.repository.name }}
          GITHUB_BRANCH: ${{ github.head_ref || github.ref_name }}

      - name: Commit changes
        id: commit
        continue-on-error: true
        if: ${{ steps.update.outputs.updated == '0' }}
        uses: EndBug/add-and-commit@v9
        with:
          add: "-- *.txt *.env README.md"
          message: "update database"
          pull: "--autostash"

      - name: Merge changes
        id: merge
        if: ${{ steps.update.outputs.updated == '0' && steps.commit.outputs.committed != 'true' }}
        uses: EndBug/add-and-commit@v9
        with:
          add: "-- *.txt *.env README.md"
          message: "update database"
          pull: "--autostash -s ours"

      - name: Get date
        id: date
        run: echo "date=$(grep -oP 'BKG_BATCH_FIRST_STARTED=\K.*' src/env.env | sed 's/-/./g')" >> "$GITHUB_OUTPUT"

      - name: Save database
        if: ${{ steps.update.outputs.updated == '0' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.zst"
          bodyFile: "CHANGELOG.md"
          tag: "${{ steps.date.outputs.date }}"
          commit: "master"
          allowUpdates: true
